<?php

namespace Container3ZA2gxx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_X3js2iYService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.X3js2iY' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.X3js2iY'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\IndexController::getGoogleCalendarRedirectInformationAction' => ['privates', '.service_locator.T7jXptp', 'get_ServiceLocator_T7jXptpService', true],
            'App\\Controller\\IndexController::signUpAction' => ['privates', '.service_locator.erj0vfI', 'get_ServiceLocator_Erj0vfIService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.beq5mCo', 'get_ServiceLocator_Beq5mCoService', true],
            'App\\Service\\CalendarService::store' => ['privates', '.service_locator.A2Pbamn', 'get_ServiceLocator_A2PbamnService', true],
            'App\\Service\\CalendarService::update' => ['privates', '.service_locator.rsTcYNL', 'get_ServiceLocator_RsTcYNLService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'kernel::terminate' => ['privates', '.service_locator.beq5mCo', 'get_ServiceLocator_Beq5mCoService', true],
            'App\\Controller\\IndexController:getGoogleCalendarRedirectInformationAction' => ['privates', '.service_locator.T7jXptp', 'get_ServiceLocator_T7jXptpService', true],
            'App\\Controller\\IndexController:signUpAction' => ['privates', '.service_locator.erj0vfI', 'get_ServiceLocator_Erj0vfIService', true],
            'App\\Service\\CalendarService:store' => ['privates', '.service_locator.A2Pbamn', 'get_ServiceLocator_A2PbamnService', true],
            'App\\Service\\CalendarService:update' => ['privates', '.service_locator.rsTcYNL', 'get_ServiceLocator_RsTcYNLService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.C9JCBPC', 'get_ServiceLocator_C9JCBPCService', true],
            'kernel:terminate' => ['privates', '.service_locator.beq5mCo', 'get_ServiceLocator_Beq5mCoService', true],
        ], [
            'App\\Controller\\IndexController::getGoogleCalendarRedirectInformationAction' => '?',
            'App\\Controller\\IndexController::signUpAction' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'App\\Service\\CalendarService::store' => '?',
            'App\\Service\\CalendarService::update' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\IndexController:getGoogleCalendarRedirectInformationAction' => '?',
            'App\\Controller\\IndexController:signUpAction' => '?',
            'App\\Service\\CalendarService:store' => '?',
            'App\\Service\\CalendarService:update' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
